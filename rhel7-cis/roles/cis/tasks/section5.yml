- name: "SCORED | 5.1.1 | PATCH | Ensure cron daemon is enabled"
  service:
      name: crond
      enabled: yes
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.1

- name: "SCORED | 5.1.2 | PATCH | Ensure permissions on /etc/crontab are configured"
  file:
      dest: /etc/crontab
      owner: root
      group: root
      mode: 0600
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.2

- name: "SCORED | 5.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured"
  file:
      dest: /etc/cron.hourly
      state: directory
      owner: root
      group: root
      mode: 0700
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.3

- name: "SCORED | 5.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured"
  file:
      dest: /etc/cron.daily
      state: directory
      owner: root
      group: root
      mode: 0700
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.4

- name: "SCORED | 5.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured"
  file:
      dest: /etc/cron.weekly
      state: directory
      owner: root
      group: root
      mode: 0700
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.5

- name: "SCORED | 5.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured"
  file:
      dest: /etc/cron.monthly
      state: directory
      owner: root
      group: root
      mode: 0700
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.6

- name: "SCORED | 5.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured"
  file:
      dest: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: 0700
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.7

- name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  file:
      dest: /etc/at.deny
      state: absent
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

- stat:
      path: "/etc/at.allow"
  register: p
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

- name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  file:
      dest: /etc/at.allow
      state: '{{ "file" if  p.stat.exists else "touch"}}'
      owner: root
      group: root
      mode: 0600
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

- name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  file:
      dest: /etc/cron.deny
      state: absent
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

- stat:
      path: "/etc/cron.allow"
  register: p
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

- name: "SCORED | 5.1.8 | PATCH | Ensure at/cron is restricted to authorized users"
  file:
      dest: /etc/cron.allow
      state: '{{ "file" if  p.stat.exists else "touch"}}'
      owner: root
      group: root
      mode: 0600
  tags:
      - level1
      - level2
      - patch
      - rule_5.1.8

- name: "SCORED | 5.2.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  file:
      dest: /etc/ssh/sshd_config
      state: file
      owner: root
      group: root
      mode: 0600
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.1

- name: "SCORED | 5.2.2 | PATCH | Ensure SSH Protocol is set to 2"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Protocol'
      line: 'Protocol 2'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.2

- name: "SCORED | 5.2.3 | PATCH | Ensure SSH LogLevel is set to INFO"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LogLevel'
      line: 'LogLevel INFO'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.3

- name: "SCORED | 5.2.4 | PATCH | Ensure SSH X11 forwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^X11Forwarding'
      line: 'X11Forwarding no'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.4

- name: "SCORED | 5.2.5 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^(#)?MaxAuthTries \d'
      line: 'MaxAuthTries 4'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.5

- name: "SCORED | 5.2.6 | PATCH | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^IgnoreRhosts'
      line: 'IgnoreRhosts yes'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.6

- name: "SCORED | 5.2.7 | PATCH | Ensure SSH HostbasedAuthentication is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^HostbasedAuthentication'
      line: 'HostbasedAuthentication no'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.7

- name: "SCORED | 5.2.8 | PATCH | Ensure SSH root login is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: 'PermitRootLogin no'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.8

- name: "SCORED | 5.2.9 | PATCH | Ensure SSH PermitEmptyPasswords is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitEmptyPasswords'
      line: 'PermitEmptyPasswords no'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.9

- name: "SCORED | 5.2.10 | PATCH | Ensure SSH PermitUserEnvironment is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitUserEnvironment'
      line: 'PermitUserEnvironment no'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.10

- name: "SCORED | 5.2.11 | PATCH | Ensure only approved ciphers are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Ciphers'
      line: 'Ciphers aes256-ctr,aes192-ctr,aes128-ctr'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.11

- name: "SCORED | 5.2.12 | PATCH | Ensure only approved MAC algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MACs'
      line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.12

#- name: "SCORED | 5.2.13 | PATCH | Ensure SSH Idle Timeout Interval is configured"
#  lineinfile:
#      state: present
#      dest: /etc/ssh/sshd_config
#      regexp: '^ClientAliveInterval'
#      line: "ClientAliveInterval {{ rhel7cis_sshd['clientaliveinterval'] }}"
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.2.13

#- name: "SCORED | 5.2.13 | PATCH | Ensure SSH ClientAliveCountMax set to <= 3"
#  lineinfile:
#      state: present
#      dest: /etc/ssh/sshd_config
#      regexp: '^ClientAliveCountMax'
#      line: "ClientAliveCountMax {{ rhel7cis_sshd['clientalivecountmax'] }}"
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.2.13

#- name: "SCORED | 5.2.14 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less"
#  lineinfile:
#      state: present
#      dest: /etc/ssh/sshd_config
#      regexp: '^LoginGraceTime'
#      line: 'LoginGraceTime 60'
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.2.14

#- name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - allowusers"
#  lineinfile:
#      state: present
#      dest: /etc/ssh/sshd_config
#      regexp: "^AllowUsers"
#      line: AllowUsers {{ rhel7cis_sshd['allowusers'] }}
#  notify:
#      - restart sshd
#  when: "rhel7cis_sshd['allowusers']|default('') != ''"
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.2.15

#- name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - allowgroups"
#  lineinfile:
#      state: present
#      dest: /etc/ssh/sshd_config
#      regexp: "^AllowGroups"
#      line: AllowGroups {{ rhel7cis_sshd['allowgroups'] }}
#  notify:
#      - restart sshd
#  when: "rhel7cis_sshd['allowgroups']|default('') != ''"
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.2.15

#- name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - denyusers"
#  lineinfile:
#      state: present
#      dest: /etc/ssh/sshd_config
#      regexp: "^DenyUsers"
#      line: DenyUsers {{ rhel7cis_sshd['denyusers'] }}
#  notify:
#      - restart sshd
#  when: "rhel7cis_sshd['denyusers']|default('') != ''"
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.2.15

#- name: "SCORED | 5.2.15 | PATCH | Ensure SSH access is limited - denygroups"
#  lineinfile:
#      state: present
#      dest: /etc/ssh/sshd_config
#      regexp: "^DenyGroups"
#      line: DenyGroups {{ rhel7cis_sshd['denygroups'] }}
#  notify:
#      - restart sshd
#  when: "rhel7cis_sshd['denygroups']|default('') != ''"
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.2.15

- name: "SCORED | 5.2.16 | PATCH | Ensure SSH warning banner is configured"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Banner'
      line: 'Banner /etc/issue'
  tags:
      - level1
      - level2
      - patch
      - rule_5.2.16

#- name: "SCORED | 5.3.1 | PATCH | Ensure password creation requirements are configured"
#  lineinfile:
#      state: present
#      dest: /etc/security/pwquality.conf
#      regexp: '^{{ item.key }}'
#      line: '{{ item.key }} = {{ item.value }}'
#  with_items:
#      - { key: 'minlen',  value: '14' }
#      - { key: 'dcredit', value: '-1' }
#      - { key: 'ucredit', value: '-1' }
#      - { key: 'ocredit', value: '-1' }
#      - { key: 'lcredit', value: '-1' }
#  tags:
#      - level1
#      - level2
#      - patch
#      - rule_5.3.1

- name: "SCORED | 5.3.2 | PATCH | Ensure lockout for failed password attempts is configured"
  command: /bin/true
  changed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.2
      - notimplemented

- name: "SCORED | 5.3.3 | PATCH | Ensure password reuse is limited"
  command: /bin/true
  changed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.3
      - notimplemented

- name: "SCORED | 5.3.4 | PATCH | Ensure password hashing algorithm is SHA-512"
  command: authconfig --passalgo=sha512 --update
  changed_when: no
  failed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_5.3.4

- name: "SCORED | 5.4.1.1 | PATCH | Ensure password expiration is 90 days or less"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MAX_DAYS'
      line: 'PASS_MAX_DAYS 90'
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.1

- name: "SCORED | 5.4.1.2 | PATCH | Ensure minimum days between password changes is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MIN_DAYS'
      line: 'PASS_MIN_DAYS 10'
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.2

- name: "SCORED | 5.4.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_WARN_AGE'
      line: 'PASS_WARN_AGE 7'
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.3

- name: "SCORED | 5.4.1.4 | PATCH | Ensure inactive password lock is 30 days or less"
  command: /bin/true
  changed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.1.4
      - notimplemented

- name: "SCORED | 5.4.2 | PATCH | Ensure system accounts are non-login"
  command: /bin/true
  changed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.2
      - notimplemented

- name: "SCORED | 5.4.3 | PATCH | Ensure default group for the root account is GID 0"
  command: usermod -g 0 root
  changed_when: no
  failed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.3

- name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/bashrc"
  replace:
      path: /etc/bashrc
      regexp: '(^\s+umask) 002'
      replace: '\1 027'
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.4

- name: "SCORED | 5.4.4 | PATCH | Ensure default user umask is 027 or more restrictive - /etc/profile"
  replace:
      path: /etc/profile
      regexp: '(^\s+umask) 002'
      replace: '\1 027'
  tags:
      - level1
      - level2
      - patch
      - rule_5.4.4

- name: "NOTSCORED | 5.5 | PATCH | Ensure root login is restricted to system console"
  command: /bin/true
  changed_when: no
  tags:
      - level1
      - level2
      - patch
      - rule_5.5
      - notimplemented

- name: "SCORED | 5.6 | PATCH | Ensure access to the su command is restricted"
  lineinfile:
      state: present
      dest: /etc/pam.d/su
      regexp: '^(#)?auth\s+required\s+pam_wheel\.so'
      line: 'auth           required        pam_wheel.so use_uid'
  tags:
      - level1
      - level2
      - patch
      - rule_5.6

- name: "SCORED | 5.6 | PATCH | Ensure access to the su command is restricted - wheel group contains root"
  user:
      name: root
      groups: wheel
  tags:
      - level1
      - level2
      - patch
      - rule_5.6
